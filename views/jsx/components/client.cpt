ClientForm = React.createClass

  getInitialState: ->
    state =
      client: null
      stage: 'unknown'
    return state

  fetchClient: ->
    params =
      id: @props.clientId
    Teresa.postJSON '/client/fetch_single', params, (response) =>
      if response.status is 'OK'
        @setState
          client: response.client
          stage: response.client.stage
      else
        console.log response
      return
    return

  componentDidMount: ->
    if @props.editing
      @fetchClient()
    return

  getClientField: (field) ->
    if @state.client? and @state.client[field]?
      return @state.client[field]
    return null

  updateClientStage: ->
    params = $(@refs.clientForm.getDOMNode()).serializeObject()
    @setState
      stage: params.stage
    return

  handleSubmit: ->
    params = $(@refs.clientForm.getDOMNode()).serializeObject()
    if @props.editing
      params.id = @state.client.id
      Teresa.postJSON '/client/edit', params, (response) =>
        if response.status is 'OK'
          Teresa.alert 'Success', 'The client has been updated!'
          window.location.href = "/client/?id=#{response.obj.id}"
        else
          console.log response
        return
      return
    if params.shouldCheckup? and params.shouldCheckup
      params.checkupAt = moment.tz('US/Central').add(15, 'days').toISOString()
    Teresa.postJSON '/client/create', params, (response) =>
      if response.status is 'OK'
        Teresa.alert 'Success', 'The client has been added!'
        window.location.href = "/client/?id=#{response.obj.id}"
      else
        console.log response
      return
    return

  render: ->
    <div>
      {
        if not @props.editing or @state.client?
          client = @state.client
          <form ref="clientForm">
            <div className="row">
              <div className="col-sm-6">
                <div className="form-group">
                  <label>First Name</label>
                  <input type="text" className="form-control" name="firstName" placeholder="Enter Client First Name" defaultValue={@getClientField 'firstName'} />
                </div>
              </div>
              <div className="col-sm-6">
                <div className="form-group">
                  <label>Last Name</label>
                  <input type="text" className="form-control" name="lastName" placeholder="Enter Client Last Name" defaultValue={@getClientField 'lastName'} />
                </div>
              </div>
            </div>
            <div className="row">
              <div className="col-sm-6">
                <div className="form-group">
                  <label>Phone Number</label>
                  <input type="text" className="form-control" name="phone" placeholder="Enter Client Phone" defaultValue={@getClientField 'phone'} />
                </div>
              </div>
              <div className="col-sm-6">
                <div className="form-group">
                  <label>Date of Birth (mm/dd/yyyy)</label>
                  <input type="date" className="form-control" name="dob" placeholder="Enter Client DOB" defaultValue={@getClientField 'dob'} />
                </div>
              </div>
            </div>
            <div className="row">
              <div className="col-sm-6">
                <div className="form-group">
                  <label>Social Security #</label>
                  <input type="text" className="form-control" name="ssn" placeholder="Enter Client SSN" defaultValue={@getClientField 'ssn'} />
                </div>
              </div>
              <div className="col-sm-6">
                <div className="form-group">
                  <label>Current Status</label>
                  <select className="form-control" name="stage" defaultValue={@getClientField 'stage'} onChange={@updateClientStage}>
                    <option value="unknown">Unknown</option>
                    <option value="emergent">Emergent</option>
                    <option value="homeless">Homeless</option>
                    <option value="rehab">In Rehab</option>
                  </select>
                </div>
              </div>
            </div>
            {
              if not @props.editing and @state.stage is 'emergent'
                <div className="form-check">
                  <label className="form-check-label">
                    <input className="form-check-input" type="checkbox" name="shouldCheckup" /> Send Client Occasional Checkup Messages
                  </label>
                </div>
            }
            <a href="javascript:;" className="btn btn-primary" onClick={@handleSubmit}>Submit</a>
          </form>
      }
    </div>

ClientSummary = React.createClass

  getInitialState: ->
    state = {}
    return state

  componentDidMount: ->
    @fetchClient()
    return

  fetchClient: ->
    params =
      id: @props.clientId
    Teresa.postJSON '/client/fetch_single', params, (response) =>
      if response.status is 'OK'
        @setState
          client: response.client
      else
        console.log response
      return
    return

  render: ->
    <div className="card">
      <div className="card-header">
        <h5 className="card-title card-title--with-input">
          Client Summary
        </h5>
      </div>
      {
        if @state.client?
          <div className="card-block">
            {
              if @state.client.stage? and @state.client.stage isnt 'ok'
                <label className="text-capitalize">Status: {@state.client.stage}</label>
            }
            <h2>
              {
                if @state.client.firstName? and @state.client.lastName?
                  "#{@state.client.firstName} #{@state.client.lastName}"
                else
                  'New Client'
              }
            </h2>
            <h4>
              <span className="text-muted">
                {@state.client.phone}
              </span>
            </h4>
            {
              if @state.client.dob?
                <p><span className="text-capitalize">{@state.client.dob}</span></p> 
            }
            {
              if @state.client.ssn?
                <p><span className="text-capitalize">{@state.client.ssn}</span></p>
            }
          </div>
      }
    </div>